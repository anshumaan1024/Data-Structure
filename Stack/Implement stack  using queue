// @leetcode :  Implement Stack using Queues

//--------------------------------------------------------------NAIVE-----------------------------------------------------------------------
// using 2 queues

class MyStack {
public:

    queue<int> q1, q2;

    MyStack() {    
    }
    
    void push(int x) {

        q2.push(x);

        while(!q1.empty()){
            q2.push(q1.front());
            q1.pop();
        }

        swap(q1,q2); 
    }
    
    int pop() {

        int temp = q1.front();
        q1.pop();

        return temp;
        
    }
    
    int top() {
        return q1.front();  
    }
    
    bool empty() {
        return !q1.size();
    }
    
};

//-------------------------------------------------------------OPTIMAL-----------------------------------------------------------------
// using 1 queue

class MyStack {
public:

    queue<int> q;
    MyStack() {
    }
    
    void push(int x) {
        
        q.push(x);
        for(int i=0; i<q.size()-1; i++){
            q.push(q.front());
            q.pop();
        }
    }
    
    int pop() {

        int temp = q.front();
        q.pop();

        return temp; 
        
    }
    
    int top() {
        return q.front();    
    }
    
    bool empty() {
        return !q.size();
    }

};

//-------------------------------------------------------------------------------------------------------------------------------------
