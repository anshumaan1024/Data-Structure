// @leetcode : Largest Rectangle in Histogram

//----------------------------------------------------------NAIVE---------------------------------------------------------------------

class Solution {
public:
    int leftHeight(int j, vector<int> &heights){

        if(j==0)            return 0;

        int i = j-1;
        int count = 0;
        while( i>=0 && heights[i] >= heights[j] ){
            count++;
            i--;
        }

        return count;

    }

public:
    int rightHeight(int j, vector<int> &heights){

        if(j==heights.size()-1)            return 0;

        int i = j+1;
        int count = 0;
        while( i<heights.size() && heights[i] >= heights[j] ){
            count++;
            i++;
        }
        
        return count;

    }

public:
    int largestRectangleArea(vector<int>& heights) {

        int n = heights.size();
        // stores largest rectangle's area
        int maxArea = 0;

        for(int i=0; i<n; i++){

            int currArea = heights[i];

            // check LHS bars, if they can form rectangle
            int left = leftHeight(i,heights);
            // checking RHS bars, if they can form rectangle
            int right = rightHeight(i,heights);

            currArea += (left + right) * heights[i];

            maxArea = max( maxArea, currArea );

        }

        return maxArea;

    }
};

//------------------------------------------------------------------------------------------------------------------------------------
