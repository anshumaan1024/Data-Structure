// leetcode : Set Matrix Zeros

//---------------------------------------------------------------NAIVE------------------------------------------------------------------

class Solution {
public:
    void setMinus(vector<vector<int>> &matrix, int a, int b){

        int row = matrix.size();
        int col = matrix[0].size();

        for(int i=0; i<row; i++)        // set col to -1
            if( matrix[i][b] !=0)       matrix[i][b] = -10;

        for(int j=0; j<col; j++)        // set row to -1
            if( matrix[a][j]!=0)        matrix[a][j] = -10;
    }

public:
    void setZeroes(vector<vector<int>>& matrix) {

        int row = matrix.size();
        int col = matrix[0].size();

        for(int i=0; i<row; i++){
            for(int j=0; j<col ; j++){
                if(matrix[i][j]==0)
                    setMinus(matrix,i,j);
            }
        }

        for(int i=0; i<row; i++){
            for(int j=0; j<col ; j++){
                if(matrix[i][j]== -10)
                    matrix[i][j] = 0;
            }
        }
         
    }
};

//--------------------------------------------------------------BETTER----------------------------------------------------------------

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {

        int row = matrix.size();
        int col = matrix[0].size();

        vector<int> dummyRow(row,0);
        vector<int> dummyCol(col,0);

        for(int i=0; i<row; i++){
            for(int j=0; j<col ; j++){

                if(matrix[i][j]==0){
                    dummyRow[i] = 1;
                    dummyCol[j] = 1;
                }

            }
        }

        for(int i=0; i<row; i++){
            for(int j=0; j<col ; j++){

                if( dummyRow[i] || dummyCol[j] )
                    matrix[i][j] = 0;

            }
        }
 
    }
};

//--------------------------------------------------------------OPTIMAL---------------------------------------------------------------

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {

        int m = matrix.size();
        int n = matrix[0].size();

        int col0 = 1;

        for(int i=0; i<m; i++){
            for(int j=0; j<n ; j++){

                if(matrix[i][j]==0){
                    matrix[i][0] = 0;

                    if(j==0)        col0 = 0;
                    else            matrix[0][j] = 0;
                }

            }
        }

        for(int i=1; i<m; i++){
            for(int j=1; j<n ; j++){

                if( matrix[i][j]!= 0){
                    // check the hashrow and hashcol
                    if( matrix[i][0]==0 || matrix[0][j]==0 )
                        matrix[i][j] = 0;
                    
                }

            }
        }

        // first, 0th row is to be solved
        if(matrix[0][0]==0 ){
            for(int j=0; j<n; j++)
                matrix[0][j] = 0;
        }

        // then, 0th column 
        if(col0==0){
            for(int i=0; i<m; i++)
                matrix[i][0] = 0;
        }
        
        return;

    }
};

//----------------------------------------------------------------------------------------------------------------------------------
