// @leetcode : Maximum Width of Binary Tree

//---------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {

        if(root==NULL)      return 0;
    
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        long ans = 1;

        while(q.empty()==false){

            int size = q.size();
            long first = q.front().second;
            long last  = q.back().second;
            ans = max(ans,last-first+1); 

            for(int i=0; i<size; i++){
                
                auto it= q.front();
                q.pop();

                TreeNode* curr = it.first;
                long idx = it.second;

                if(curr->left!=NULL)                q.push({curr->left,idx*2+1});
                if(curr->right!=NULL)               q.push({curr->right,idx*2+2});
            }
        }

        return ans;
        
    }
};

//---------------------------------------------------------------------------------------------------------------------------------------------------------------
