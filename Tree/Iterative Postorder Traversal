// @leetcode : Binary Tree Postorder Traversal

// using 2 stacks
//---------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {

        vector<int> ans;
        if(root==NULL)              return ans;

        stack<TreeNode*> s1,s2;
        s1.push(root);

        while(!s1.empty()){

            TreeNode* node = s1.top();
            s1.pop();
            s2.push(node);

            if(node->left!=NULL)                s1.push(node->left);
            if(node->right!=NULL)               s1.push(node->right);          

        }

        while(!s2.empty()){
            ans.push_back(s2.top()->val);
            s2.pop();
        }

        return ans;
        
    }
};

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
