// @leetcode : Balanced Binary Tree
//
//----------------------------------------------------------------NAIVE APPROACH (METHOD 1)----------------------------------------------------------------------

class Solution {
int height(TreeNode* node){

    if(node==NULL)          return 0;
    
    int lh = height(node->left);
    int rh = height(node->right);

    return 1 + max(lh,rh);
}

public:
    bool isBalanced(TreeNode* root) {

        if(root==NULL)              return true;

        int lh = height(root->left);
        int rh = height(root->right);

        if(abs(lh-rh) > 1)         return false;

        bool left = isBalanced(root->left);
        bool right = isBalanced(root->right);

        if(left==false || right==false )
                return false;

        return true;
        
    }
};

//-----------------------------------------------------------------OPTIMIZED (METHOD 2)-------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------------------------------------------------------------------
