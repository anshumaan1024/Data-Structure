// @leetcode : Binary Tree Zigzag Level Order Traversal

//-----------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {

        vector<vector<int>> ans;
        if(root==NULL)              return ans;

        queue<TreeNode*> q;
        q.push(root);
        bool leftToRight = true;

        while(!q.empty()){

            int size = q.size();
            vector<int> ds(size);

            for(int i=0; i<size; i++){

                TreeNode* node = q.front();
                q.pop();

                int ind = (leftToRight==true) ? i : (size-1-i);
                ds[ind] = node->val;

                if(node->left!=NULL)         q.push(node->left);
                if(node->right!=NULL)        q.push(node->right);

            }

            ans.push_back(ds);
            leftToRight = !leftToRight; 
        }

        return ans;

    }
};

//-----------------------------------------------------------------------------------------------------------------------------------------------------------
