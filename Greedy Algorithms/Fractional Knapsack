// @gfg : Fractional Knapsack

//-------------------------------------------------------------ALGO-----------------------------------------------------------------

/*
struct Item{
    int value;
    int weight;
};
*/

class Solution
{
    public:
    
    static bool myComp(Item a, Item b){
        
        double r1 = (double)a.value/(double)a.weight;
        double r2 = (double)b.value/(double)b.weight;
        
        return r1 > r2;
    }
    
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        sort( arr, arr+n, myComp);
        
        double total  = 0.0;
        
        for(int i=0; i<n; i++){
            
            if( arr[i].weight <= W ){
                W -= arr[i].weight;
                total += arr[i].value;
            }
            
            else{
                total += arr[i].value*((double)W/arr[i].weight);
                W = 0;
                break;
            }
            
        }
        
        return total;
    }
        
};

//-----------------------------------------------------------------------------------------------------------------------------------
