// @leetcode : Single Number III

//---------------------------------------------------------------OPTIMAL------------------------------------------------------------------

class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {

        int n = nums.size();
        long long  xorr = 0;

        for(int i=0; i<n; i++)
            xorr = xorr^nums[i];
        
        long long  m   = xorr&(~(xorr-1));
        int res1 = 0, res2 = 0;

        for(int i=0; i<n; i++){
            if(m&nums[i])           res1 = res1^nums[i];
            else                    res2 = res2^nums[i];
        }

        vector<int> ans = {res1, res2};
        return ans;
        
    }
};

//---------------------------------------------------------------------------------------------------------------------------------------
