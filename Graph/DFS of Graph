// @gfg : DFS of Graph

//---------------------------------------------------------------------------------------------------------------------------------------

class Solution {
  public:
    void dfs(int node, int vis[], vector<int> adj[], vector<int> &ans ){
        
        vis[node] = 1;
        ans.push_back(node);
        // traverse all its neigbours
        for(auto it: adj[node]){
            if(!vis[it])
                dfs(it,vis,adj,ans);
        }
    }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        
        int vis[V] = {0};
        int start = 0;
        vis[start] = 1;
        
        vector<int> ans;
        
        dfs(start,vis,adj,ans);
        
        return ans;
    }
};

//---------------------------------------------------------------------------------------------------------------------------------------
